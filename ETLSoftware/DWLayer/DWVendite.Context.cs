//------------------------------------------------------------------------------
// <auto-generated>
//     Codice generato da un modello.
//
//     Le modifiche manuali a questo file potrebbero causare un comportamento imprevisto dell'applicazione.
//     Se il codice viene rigenerato, le modifiche manuali al file verranno sovrascritte.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ETLSoftware.DWLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DWVenditeEntities : DbContext
    {
        public DWVenditeEntities()
            : base("name=DWVenditeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DimenCategoria> DimenCategoria { get; set; }
        public virtual DbSet<DimenData> DimenData { get; set; }
        public virtual DbSet<DimenLinguaCollezione> DimenLinguaCollezione { get; set; }
        public virtual DbSet<DimenLinguaColore> DimenLinguaColore { get; set; }
        public virtual DbSet<DimenMacrocategoria> DimenMacrocategoria { get; set; }
        public virtual DbSet<DimenNomeDesign> DimenNomeDesign { get; set; }
        public virtual DbSet<DimenProvincia> DimenProvincia { get; set; }
        public virtual DbSet<DimenSessoAbbigliamento> DimenSessoAbbigliamento { get; set; }
        public virtual DbSet<DimenSessoCliente> DimenSessoCliente { get; set; }
        public virtual DbSet<DimenStato> DimenStato { get; set; }
        public virtual DbSet<DimenTipoPagamento> DimenTipoPagamento { get; set; }
        public virtual DbSet<DimenValoreTaglia> DimenValoreTaglia { get; set; }
        public virtual DbSet<FattoVendita> FattoVendita { get; set; }
    
        public virtual int createFattoVendita(Nullable<int> iDMacrocategoria, Nullable<int> iDCategoria, Nullable<int> iDSessoCliente, Nullable<int> iDData, Nullable<int> iDLinguaCollezione, Nullable<int> iDLinguaColore, Nullable<int> iDNomeDesign, Nullable<int> iDProvincia, Nullable<int> iDSessoAbbigliamento, Nullable<int> iDStato, Nullable<int> iDTipoPagamento, Nullable<int> iDValoreTaglia, Nullable<int> iDOrdine, Nullable<decimal> prezzoTotale, Nullable<int> quantitaVenduta)
        {
            var iDMacrocategoriaParameter = iDMacrocategoria.HasValue ?
                new ObjectParameter("IDMacrocategoria", iDMacrocategoria) :
                new ObjectParameter("IDMacrocategoria", typeof(int));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var iDSessoClienteParameter = iDSessoCliente.HasValue ?
                new ObjectParameter("IDSessoCliente", iDSessoCliente) :
                new ObjectParameter("IDSessoCliente", typeof(int));
    
            var iDDataParameter = iDData.HasValue ?
                new ObjectParameter("IDData", iDData) :
                new ObjectParameter("IDData", typeof(int));
    
            var iDLinguaCollezioneParameter = iDLinguaCollezione.HasValue ?
                new ObjectParameter("IDLinguaCollezione", iDLinguaCollezione) :
                new ObjectParameter("IDLinguaCollezione", typeof(int));
    
            var iDLinguaColoreParameter = iDLinguaColore.HasValue ?
                new ObjectParameter("IDLinguaColore", iDLinguaColore) :
                new ObjectParameter("IDLinguaColore", typeof(int));
    
            var iDNomeDesignParameter = iDNomeDesign.HasValue ?
                new ObjectParameter("IDNomeDesign", iDNomeDesign) :
                new ObjectParameter("IDNomeDesign", typeof(int));
    
            var iDProvinciaParameter = iDProvincia.HasValue ?
                new ObjectParameter("IDProvincia", iDProvincia) :
                new ObjectParameter("IDProvincia", typeof(int));
    
            var iDSessoAbbigliamentoParameter = iDSessoAbbigliamento.HasValue ?
                new ObjectParameter("IDSessoAbbigliamento", iDSessoAbbigliamento) :
                new ObjectParameter("IDSessoAbbigliamento", typeof(int));
    
            var iDStatoParameter = iDStato.HasValue ?
                new ObjectParameter("IDStato", iDStato) :
                new ObjectParameter("IDStato", typeof(int));
    
            var iDTipoPagamentoParameter = iDTipoPagamento.HasValue ?
                new ObjectParameter("IDTipoPagamento", iDTipoPagamento) :
                new ObjectParameter("IDTipoPagamento", typeof(int));
    
            var iDValoreTagliaParameter = iDValoreTaglia.HasValue ?
                new ObjectParameter("IDValoreTaglia", iDValoreTaglia) :
                new ObjectParameter("IDValoreTaglia", typeof(int));
    
            var iDOrdineParameter = iDOrdine.HasValue ?
                new ObjectParameter("IDOrdine", iDOrdine) :
                new ObjectParameter("IDOrdine", typeof(int));
    
            var prezzoTotaleParameter = prezzoTotale.HasValue ?
                new ObjectParameter("PrezzoTotale", prezzoTotale) :
                new ObjectParameter("PrezzoTotale", typeof(decimal));
    
            var quantitaVendutaParameter = quantitaVenduta.HasValue ?
                new ObjectParameter("QuantitaVenduta", quantitaVenduta) :
                new ObjectParameter("QuantitaVenduta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createFattoVendita", iDMacrocategoriaParameter, iDCategoriaParameter, iDSessoClienteParameter, iDDataParameter, iDLinguaCollezioneParameter, iDLinguaColoreParameter, iDNomeDesignParameter, iDProvinciaParameter, iDSessoAbbigliamentoParameter, iDStatoParameter, iDTipoPagamentoParameter, iDValoreTagliaParameter, iDOrdineParameter, prezzoTotaleParameter, quantitaVendutaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getIDDimenData(Nullable<System.DateTime> data)
        {
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getIDDimenData", dataParameter);
        }
    }
}
